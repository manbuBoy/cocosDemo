{"version":3,"sources":["assets\\scripts\\Player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","type","AudioClip","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onKeyDown","event","log","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","jumpAction","node","runAction","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","update","dt","console","Math","abs","x","start"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n        // 跳跃音效资源\r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n    },\r\n\r\n    setJumpAction: function () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        // 不断重复，而且每次完成落地动作后调用回调来播放声音\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n\r\n    onKeyDown (event) {\r\n        cc.log('按下',event)\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break;\r\n        }\r\n    },\r\n    onKeyUp (event) {\r\n        cc.log('抬起',event)\r\n        // unset a flag when key released\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break;\r\n        }\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n         // 加速度方向开关\r\n         this.accLeft = false;\r\n         this.accRight = false;\r\n         // 主角当前水平方向速度\r\n         this.xSpeed = 0;\r\n          // 初始化键盘输入监听\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);  \r\n\r\n    },\r\n    update (dt) {\r\n        console.log('update',dt)\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n});\r\n"]}